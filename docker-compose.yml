version: "3.8"

services:
  traefik:
    image: traefik:v2
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--log.level=ERROR"
      - "--accesslog=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=email@admin.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    expose:
      - "8080"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - traefik_letsencrypt:/letsencrypt

  frontend:
    build:
      context: ./frontend
    environment:
      - AUTH_API_ADDRESS=http://auth-api:8081
      - TODOS_API_ADDRESS=http://todos-api:8082
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - auth-api
      - todos-api
    command: npm run dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      - "traefik.http.routers.frontend-http.rule=Host(`liberttinnii.xyz`)"
      - "traefik.http.routers.frontend-http.service=frontend"
      - "traefik.http.routers.frontend-https.tls=true"
      - "traefik.http.routers.frontend-https.tls.certresolver=myresolver"
      - "traefik.http.routers.frontend-https.entrypoints=websecure"
      - "traefik.http.routers.frontend-https.rule=Host(`liberttinnii.xyz`)"
      - "traefik.http.routers.frontend-https.service=frontend"
      - "traefik.http.routers.frontend-http.middlewares=redirect-https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.permanent=true"

  auth-api:
    build:
      context: ./auth-api
    ports:
      - "${AUTH_API_PORT}:8081"
    environment:
      - AUTH_API_PORT=${AUTH_API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - USERS_API_ADDRESS=${USERS_API_ADDRESS}
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    depends_on:
      - redis-queue
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todosapi-http.entrypoints=web"
      - "traefik.http.routers.todosapi-http.rule=Host(`todos.liberttinnii.xyz`)"
      - "traefik.http.routers.todosapi-https.tls=true"
      - "traefik.http.routers.todosapi-https.tls.certresolver=myresolver"
      - "traefik.http.routers.todosapi-https.entrypoints=websecure"
      - "traefik.http.routers.todosapi-https.rule=Host(`todos.liberttinnii.xyz`)"
      - "traefik.http.routers.todosapi-http.middlewares=redirect-https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.permanent=true"

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  redis-queue:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  users-api:
    build:
      context: ./users-api
    ports:
      - "${SERVER_PORT}:8083"
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}

volumes:
  traefik_letsencrypt:
  redis_data:
